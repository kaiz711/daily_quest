<!--로고-->
        <div class="drawsvg" style=" position: relative; z-index:100">
        <svg version="1.1" viewBox="0 0 700 300">
          <symbol id="fade-text" >
            <text style="font-family:AlexBrush" x="45%" y="40%" text-anchor="middle">Daily Quest</text>
            <text style="font-family:AlexBrush" x="55%" y="60%" text-anchor="middle" size="50px">Hack your day</text>
            
          </symbol>
          <g>
            <use class="stroke" xlink:href="#fade-text"/>
            <use class="fill" xlink:href="#fade-text"/>
          </g>
        </svg>
        </div>

<div style="position:relative; z-index:100; opacity: 0.8; margin:50px; padding:10px" class="right white z-depth-5">
  
  <%= form_for(resource, as: resource_name, url: session_path(resource_name)) do |f| %>
    <div class="row col s6 m3 l3 input-field">
      <i class="material-icons small col s2 m2 l2">mail</i>
      <div class="input-field offset-s2 col s8 m7 l7">
        <%= f.label :email %><br />
        <%= f.email_field :email, autofocus: true %>
      </div>
    </div>
    
    <div class="row col s6 m3 l3 input-field">
      <i class="material-icons small col s2 m2 l2">vpn_key</i>
      <div class="input-field offset-s2 col s8 m7 l7">
        <%= f.label :password %><br />
        <%= f.password_field :password, autocomplete: "off" %>
      </div>
    </div>
  
    <% if devise_mapping.rememberable? -%>
      <div class="field row">
        <%= f.check_box :remember_me , id:"text5"%>
        <%= f.label :remember_me, for:"text5" %>
        <div class="right" style="margin-right: 100"><br> <%= link_to "Forgot your password?", new_password_path(resource_name) %></div>
      </div>
    <% end -%>
  
    <div class="actions row center">
      <%= f.submit "Log in", class:"waves-effect waves-light btn yellow darken-3"%>
      <div class="waves-effect waves-light btn yellow darken-3 ">
          <a href="/users/sign_up" style="color:#ffffff">SIGN UP</a>
      </div>
    </div>
    <div class="actions row center">
      <%- if devise_mapping.omniauthable? %>
        <div>
    <%- resource_class.omniauth_providers.each do |provider| %>
      <%= link_to omniauth_authorize_path(resource_name, provider) do %>
          <% if provider.to_s == "facebook" %>
            <%= image_tag("/assets/fb.png", size: "117.52x36")%>
          <% else %>
            <%= image_tag("/assets/gg.png", size: "117.52x36")%>
          <% end %>
      <% end -%>
    <% end -%>
  </div>
      <% end -%>
    </div>
  <% end %>
</div>

				
<html>
    <head>
        <title>Day and Night Scenery Animation with jQuery</title>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
        <meta name="description" content="Day and Night: Creating a Scenery Animation with jQuery and CSS" />
        <meta name="keywords" content="jquery, css, animation, scenery, tutorial" />
    </head>
    
    <body>

        <div id="sky"></div>
        <div id="sun_yellow"></div>
        <div id="sun_red"></div>
        <div id="clouds"></div>
        <div id="ground"></div>
        <div id="night"></div>
        <div id="stars"></div>        
        <div id="sstar"></div>
        <div id="moon"></div>
        <div id="title"></div>
        
        
        <script type="text/javascript">
            $(function() {
                $('#sun_yellow').animate({'top':'96%','opacity':0.4}, 12000,function(){
                    $('#stars').animate({'opacity':1}, 5000,function(){
                        $('#moon').animate({'top':'30%','opacity':1}, 5000, function(){
                            $('#sstar').animate({'opacity':1}, 300);
                            $('#sstar').animate({
                                'backgroundPosition':'0px 0px','top':'15%', 'opacity':0
                            }, 500,function(){
                                $('#title').animate({'opacity':1}, 1000);
                                $('#back').animate({'opacity':1}, 3000);
                            });
                        });
                    });
                });
                $('#sun_red').animate({'top':'96%','opacity':0.8}, 12000);
                $('#sky').animate({'backgroundColor':'#4F0030'}, 18000);
                $('#clouds').animate({'backgroundPosition':'1000px 0px','opacity':0}, 30000);
                $('#night').animate({'opacity':0.8}, 20000);
            });
        </script>
    </body>
</html>




<style>
  
  .drawsvg,`
svg {
    width: 100%;
    height: 300px;

}

.stroke {
    stroke: #000;
    stroke-width: 1px;
    stroke-dasharray: 0 250;
    stroke-opacity: 1;
    fill: none;
    -webkit-animation: stroke_offset 8s infinite;
    animation: stroke_offset 8s infinite;
    -webkit-animation-timing-function: cubic-bezier(.25, .46, .45, .94);
    animation-timing-function: cubic-bezier(.25, .46, .45, .94)
}

@-webkit-keyframes stroke_offset {
    100%,
    25% {
        stroke-dasharray: 0 250;
        stroke-opacity: 1
    }
    50%,
    75% {
        stroke-dasharray: 250 0;
        stroke-opacity: .75
    }
    55%,
    70% {
        stroke-dasharray: 250 0;
        stroke-opacity: 0
    }
}

@keyframes stroke_offset {
    100%,
    25% {
        stroke-dasharray: 0 250;
        stroke-opacity: 1
    }
    50%,
    75% {
        stroke-dasharray: 250 0;
        stroke-opacity: .75
    }
    55%,
    70% {
        stroke-dasharray: 250 0;
        stroke-opacity: 0
    }
}

.fill {
    fill: #000;
    fill-opacity: 0;
    -webkit-animation: fill_offset 8s infinite;
    animation: fill_offset 8s infinite;
    -webkit-animation-timing-function: cubic-bezier(.25, .46, .45, .94);
    animation-timing-function: cubic-bezier(.25, .46, .45, .94)
}

@-webkit-keyframes fill_offset {
    100%,
    25%,
    35%,
    90% {
        fill-opacity: 0
    }
    50%,
    70% {
        fill-opacity: 1
    }
}

@keyframes fill_offset {
    100%,
    25%,
    35%,
    90% {
        fill-opacity: 0
    }
    50%,
    70% {
        fill-opacity: 1
    }
}

#fade-text {
    font-family: 'AlexBrush', cursive;
    font-size: 4em
}

svg {
    position: absolute
}

</style>

<!--배경효과 -->
<style>
    body{
    overflow:hidden;
}
#clouds, #sky, #night, #stars{
    position:absolute;
    top:0px;
    left:0px;
    right:0px;
    bottom:0px;
    width:100%;
}
#sky{
    background:#fff url(/sky.png) repeat-x top left;
    z-index:1;
}
#sun_yellow{
    position:absolute;
    left:45%;
    top:50%;
    width:150px;
    height:152px;
    background:transparent url(/sun.png) no-repeat center center;
    z-index:2;
}
#sun_red{
    position:absolute;
    left:45%;
    top:50%;
    width:150px;
    height:152px;
    background:transparent url(/sun2.png) no-repeat center center;
    z-index:2;
    opacity:0;
    filter:progid:DXImageTransform.Microsoft.Alpha(opacity=0);
}
#clouds{
    background:transparent url(/clouds.png) repeat-x top left;
    z-index:3;
}
#ground{
    position:absolute;
    left:0px;
    right:0px;
    bottom:0px;
    width:100%;
    height:232px;
    background:transparent url(/ground.png) repeat-x bottom center;
    z-index:3;
}
#night{
    background-color:#000;
    z-index:4;
    opacity:0;
    filter:progid:DXImageTransform.Microsoft.Alpha(opacity=0);
}
#stars{
    bottom:200px;
    background:transparent url(/stars.png) repeat bottom center;
    z-index:5;
    opacity:0;
    filter:progid:DXImageTransform.Microsoft.Alpha(opacity=0);
}
#sstar{
    position:absolute;
    left:40%;
    top:10%;
    width:126px;
    height:80px;
    background:transparent url(/shootingstar.png) no-repeat 80px -200px;
    z-index:5;
    opacity:0;
    filter:progid:DXImageTransform.Microsoft.Alpha(opacity=0);
}
#moon{
    position:absolute;
    left:45%;
    top:60%;
    width:168px;
    height:168px;
    background:transparent url(/moon.png) no-repeat center center;
    z-index:6;
    opacity:0;
    filter:progid:DXImageTransform.Microsoft.Alpha(opacity=0);
}

/* Just for the showcase*/

#title{
    position:absolute;
    left:0px;
    top:0px;
    width:500px;
    height:300px;
    background:transparent url(../title.png) no-repeat center center;
    z-index:6;
    opacity:0;
    filter:progid:DXImageTransform.Microsoft.Alpha(opacity=0);
}
#back{
    position:absolute;
    right:0px;
    bottom:0px;
    width:176px;
    height:50px;
    background:transparent url(../back.png) no-repeat center center;
    z-index:6;
    outline:none;
    cursor:pointer;
    opacity:0;
    filter:progid:DXImageTransform.Microsoft.Alpha(opacity=0);
}
</style>

<script>
    (function(jQuery){

	// We override the animation for all of these color styles
	jQuery.each(['backgroundColor', 'borderBottomColor', 'borderLeftColor', 'borderRightColor', 'borderTopColor', 'color', 'outlineColor'], function(i,attr){
		jQuery.fx.step[attr] = function(fx){
			if ( fx.state == 0 ) {
				fx.start = getColor( fx.elem, attr );
				fx.end = getRGB( fx.end );
			}

			fx.elem.style[attr] = "rgb(" + [
				Math.max(Math.min( parseInt((fx.pos * (fx.end[0] - fx.start[0])) + fx.start[0]), 255), 0),
				Math.max(Math.min( parseInt((fx.pos * (fx.end[1] - fx.start[1])) + fx.start[1]), 255), 0),
				Math.max(Math.min( parseInt((fx.pos * (fx.end[2] - fx.start[2])) + fx.start[2]), 255), 0)
			].join(",") + ")";
		}
	});

	// Color Conversion functions from highlightFade
	// By Blair Mitchelmore
	// http://jquery.offput.ca/highlightFade/

	// Parse strings looking for color tuples [255,255,255]
	function getRGB(color) {
		var result;

		// Check if we're already dealing with an array of colors
		if ( color && color.constructor == Array && color.length == 3 )
			return color;

		// Look for rgb(num,num,num)
		if (result = /rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/.exec(color))
			return [parseInt(result[1]), parseInt(result[2]), parseInt(result[3])];

		// Look for rgb(num%,num%,num%)
		if (result = /rgb\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*\)/.exec(color))
			return [parseFloat(result[1])*2.55, parseFloat(result[2])*2.55, parseFloat(result[3])*2.55];

		// Look for #a0b1c2
		if (result = /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(color))
			return [parseInt(result[1],16), parseInt(result[2],16), parseInt(result[3],16)];

		// Look for #fff
		if (result = /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(color))
			return [parseInt(result[1]+result[1],16), parseInt(result[2]+result[2],16), parseInt(result[3]+result[3],16)];

		// Otherwise, we're most likely dealing with a named color
		return colors[jQuery.trim(color).toLowerCase()];
	}
	
	function getColor(elem, attr) {
		var color;

		do {
			color = jQuery.curCSS(elem, attr);

			// Keep going until we find an element that has color, or we hit the body
			if ( color != '' && color != 'transparent' || jQuery.nodeName(elem, "body") )
				break; 

			attr = "backgroundColor";
		} while ( elem = elem.parentNode );

		return getRGB(color);
	};
	
	// Some named colors to work with
	// From Interface by Stefan Petre
	// http://interface.eyecon.ro/

	var colors = {
		aqua:[0,255,255],
		azure:[240,255,255],
		beige:[245,245,220],
		black:[0,0,0],
		blue:[0,0,255],
		brown:[165,42,42],
		cyan:[0,255,255],
		darkblue:[0,0,139],
		darkcyan:[0,139,139],
		darkgrey:[169,169,169],
		darkgreen:[0,100,0],
		darkkhaki:[189,183,107],
		darkmagenta:[139,0,139],
		darkolivegreen:[85,107,47],
		darkorange:[255,140,0],
		darkorchid:[153,50,204],
		darkred:[139,0,0],
		darksalmon:[233,150,122],
		darkviolet:[148,0,211],
		fuchsia:[255,0,255],
		gold:[255,215,0],
		green:[0,128,0],
		indigo:[75,0,130],
		khaki:[240,230,140],
		lightblue:[173,216,230],
		lightcyan:[224,255,255],
		lightgreen:[144,238,144],
		lightgrey:[211,211,211],
		lightpink:[255,182,193],
		lightyellow:[255,255,224],
		lime:[0,255,0],
		magenta:[255,0,255],
		maroon:[128,0,0],
		navy:[0,0,128],
		olive:[128,128,0],
		orange:[255,165,0],
		pink:[255,192,203],
		purple:[128,0,128],
		violet:[128,0,128],
		red:[255,0,0],
		silver:[192,192,192],
		white:[255,255,255],
		yellow:[255,255,0]
	};
	
})(jQuery);

</script>